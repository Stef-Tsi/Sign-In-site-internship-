.headerbackground{
    object-fit: cover;
    width: 100%;
    height: 100%;
    object-position: center 70%;
    position:absolute;
    box-shadow: 0px 0px 35px 35px rgba(1, 255, 255, 0.5) !important;
    transition: .6s;
    display: none;
}

#header{
    width: 100%;
    height: 14%;
    overflow: hidden;
    position: relative;
    transition: .6s;
}
.log-in-button{
    color: white;
    z-index: 2;
}
.log-in-button:hover{
    transform: scale(1.1);
    transition: all ease 500ms;
}
.headerbanner{
    position: absolute;
    left: 12%;
    top: -100%;
    height: auto;
    width: 200px;
    box-shadow: 15px -20px 10px -15px rgba(0, 0, 0, .9), -15px -20px 10px -15px rgba(0, 0, 0, .9);
    z-index: 2;
}
.headerbanner:hover{
    cursor: pointer;
}
body{
    height: 4000px;
}
.container{
    margin: 0 10%;
}@import url('https://fonts.googleapis.com/css?family=Arima+Madurai:300');

.bird {
	background-image: url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/174479/bird-cells-new.svg);
	background-size: auto 100%;
	width: 88px;
	height: 125px;
	will-change: background-position;
	animation-name: fly-cycle;
	animation-timing-function: steps(10);
    animation-iteration-count: infinite;
    z-index: 1;
    opacity: 0.5;
}
.bird--one{
	animation-duration: 0.8s;
	animation-delay: -.5s;
}
.bird-container {
	position: absolute;
	top: 2%;
	left: -10%;
	transform: scale(0) translateX(-10vw);
	will-change: transform;
	animation-name: fly-right-one;
	animation-timing-function: linear;
	animation-iteration-count: infinite;
}
.bird-container--one{
	animation-duration: 13s;
	animation-delay: 1s;
}
@keyframes fly-cycle {
	100% {
		background-position: -900px 0;
	}
}
@keyframes fly-right-one {
	0% {
		transform: scale(0.3) translateX(-10vw);
	}
	10% {
		transform: translateY(2vh) translateX(10vw) scale(0.4);
	}
	20% {
		transform: translateY(0vh) translateX(30vw) scale(0.5);
	}
	30% {
		transform: translateY(4vh) translateX(50vw) scale(0.6);
	}
	40% {
		transform: translateY(2vh) translateX(70vw) scale(0.6);
	}
	50% {
		transform: translateY(0vh) translateX(90vw) scale(0.6);
	}
	60% {
		transform: translateY(0vh) translateX(110vw) scale(0.6);
	}
	100% {
		transform: translateY(0vh) translateX(110vw) scale(0.6);
	}
}